# generated by fastapi-codegen:
#   filename:  openapi.yaml
#   timestamp: 2025-06-29T03:14:12+00:00

from __future__ import annotations

from datetime import date
from decimal import Decimal
from enum import Enum
from typing import List, Optional
from uuid import UUID

from pydantic import AnyUrl, BaseModel, EmailStr, Field, RootModel, conint, constr


class ApplicationStatusCode(BaseModel):
    code: Optional[str] = Field(None, title='Code')
    description: constr(max_length=100) = Field(..., title='Description')


class Aquifer(BaseModel):
    aquifer_id: Optional[int] = Field(None, title='Aquifer ID Number')
    aquifer_name: Optional[constr(max_length=100)] = Field(None, title='Aquifer name')
    area: Optional[Decimal] = Field(None, title='Size (square km)')
    demand: Optional[str] = Field(None, title='Demand Reference')
    demand_description: Optional[str] = Field(None, title='Demand description')
    known_water_use: Optional[str] = Field(None, title='Known Water Use Reference')
    known_water_use_description: Optional[str] = Field(
        None, title='Known water use description'
    )
    litho_stratographic_unit: Optional[constr(max_length=100)] = Field(
        None, title='Lithographic Stratographic Unit'
    )
    location_description: Optional[constr(max_length=100)] = Field(
        None, title='Description of Location'
    )
    mapping_year: Optional[conint(ge=1990, le=2019)] = Field(
        None, description='Use the following format: ', title='Date of Mapping'
    )
    material: Optional[str] = Field(None, title='Material Reference')
    material_description: Optional[str] = Field(None, title='Material description')
    notes: Optional[constr(max_length=2000)] = Field(
        None, title='Notes on Aquifer, for internal use only.'
    )
    productivity: Optional[str] = Field(None, title='Productivity Reference')
    productivity_description: Optional[str] = Field(
        None, title='Productivity description'
    )
    quality_concern: Optional[str] = Field(None, title='Quality Concern Reference')
    quality_concern_description: Optional[str] = Field(
        None, title='Quality concern description'
    )
    subtype: Optional[str] = Field(None, title='Subtype Reference')
    subtype_description: Optional[str] = Field(None, title='Subtype description')
    vulnerability: Optional[str] = Field(None, title='Aquifer Vulnerabiliy')
    vulnerability_description: Optional[str] = Field(
        None, title='Vulnerability description'
    )


class AquiferDemand(BaseModel):
    code: constr(max_length=1) = Field(..., title='Code')
    description: constr(max_length=100) = Field(..., title='Description')


class AquiferMaterial(BaseModel):
    code: constr(max_length=10) = Field(..., title='Code')
    description: constr(max_length=100) = Field(..., title='Description')


class AquiferProductivity(BaseModel):
    code: constr(max_length=1) = Field(..., title='Code')
    description: constr(max_length=100) = Field(..., title='Description')


class AquiferSerializerBasic(BaseModel):
    aquifer_id: Optional[int] = Field(None, title='Aquifer ID Number')
    description: Optional[str] = Field(None, title='Description')


class AquiferSubtype(BaseModel):
    code: constr(max_length=3) = Field(..., title='Code')
    description: str = Field(..., title='Description')


class AquiferVulnerability(BaseModel):
    code: constr(max_length=1) = Field(..., title='Code')
    description: constr(max_length=100) = Field(..., title='Description')


class DriveShoe(Enum):
    boolean_False = False
    boolean_True = True


class Casing(BaseModel):
    casing_code: Optional[str] = Field(None, title='Casing Type Code')
    casing_material: Optional[str] = Field(None, title='Casing Material Code')
    diameter: Decimal = Field(..., title='Diameter')
    drive_shoe: Optional[DriveShoe] = Field(None, title='Drive Shoe')
    end: Decimal = Field(..., title='To')
    start: Decimal = Field(..., title='From')
    wall_thickness: Optional[Decimal] = Field(None, title='Wall Thickness')


class DecommissionDescription(BaseModel):
    end: Decimal = Field(..., title='Decommissioned To')
    material: str = Field(..., title='Material')
    observations: Optional[constr(max_length=255)] = Field(None, title='Observations')
    start: Decimal = Field(..., title='Decommissioned From')


class LinerPerforation(BaseModel):
    end: Decimal = Field(..., title='Perforated To')
    start: Decimal = Field(..., title='Perforated From')


class LithologyDescription(BaseModel):
    lithology_colour: Optional[str] = Field(None, title='Colour')
    lithology_from: Optional[Decimal] = Field(None, title='From')
    lithology_hardness: Optional[str] = Field(None, title='Hardness')
    lithology_moisture: Optional[str] = Field(None, title='Moisture')
    lithology_raw_data: Optional[constr(max_length=250)] = Field(None, title='Raw Data')
    lithology_to: Optional[Decimal] = Field(None, title='To')
    water_bearing_estimated_flow: Optional[Decimal] = Field(
        None, title='Water Bearing Estimated Flow'
    )


class Organization(BaseModel):
    city: Optional[constr(max_length=50)] = Field(None, title='Town/City')
    email: Optional[EmailStr] = Field(None, title='Email adddress')
    fax_tel: Optional[constr(max_length=15)] = Field(None, title='Fax number')
    main_tel: Optional[constr(max_length=15)] = Field(None, title='Telephone number')
    name: constr(max_length=200) = Field(..., title='Name')
    org_guid: Optional[UUID] = Field(None, title='Organization UUID')
    org_verbose_name: Optional[str] = Field(None, title='Org verbose name')
    postal_code: Optional[constr(max_length=10)] = Field(None, title='Postal Code')
    province_state: str = Field(..., title='Province/State')
    street_address: Optional[constr(max_length=100)] = Field(
        None, title='Street Address'
    )
    website_url: Optional[AnyUrl] = Field(None, title='Website')


class OrganizationList(BaseModel):
    city: Optional[constr(max_length=50)] = Field(None, title='Town/City')
    email: Optional[EmailStr] = Field(None, title='Email adddress')
    fax_tel: Optional[constr(max_length=15)] = Field(None, title='Fax number')
    main_tel: Optional[constr(max_length=15)] = Field(None, title='Telephone number')
    name: constr(max_length=200) = Field(..., title='Name')
    org_guid: Optional[UUID] = Field(None, title='Organization UUID')
    org_verbose_name: Optional[str] = Field(None, title='Org verbose name')
    postal_code: Optional[constr(max_length=10)] = Field(None, title='Postal Code')
    province_state: str = Field(..., title='Province/State')
    street_address: Optional[constr(max_length=100)] = Field(
        None, title='Street Address'
    )
    website_url: Optional[AnyUrl] = Field(None, title='Website')


class OrganizationNameList(BaseModel):
    name: constr(max_length=200) = Field(..., title='Name')
    org_guid: Optional[UUID] = Field(None, title='Organization UUID')
    org_verbose_name: Optional[str] = Field(None, title='Org verbose name')


class PersonBasic(BaseModel):
    name: Optional[str] = Field(None, title='Name')
    person_guid: Optional[UUID] = Field(None, title='Person UUID')


class Qualification(BaseModel):
    description: Optional[str] = Field(None, title='Description')
    well_class: str = Field(..., title='Well class')


class QualityConcern(BaseModel):
    code: constr(max_length=2) = Field(..., title='Code')
    description: constr(max_length=100) = Field(..., title='Description')


class RegistrationsNumber(BaseModel):
    registration_no: Optional[constr(max_length=15)] = Field(
        None, title='Registration no'
    )
    registries_activity: str = Field(..., title='Registries activity')


class Screen(BaseModel):
    assembly_type: str = Field(..., title='Assembly type')
    end: Decimal = Field(..., title='To')
    internal_diameter: Optional[Decimal] = Field(None, title='Diameter')
    slot_size: Optional[Decimal] = Field(None, title='Slot Size')
    start: Decimal = Field(..., title='From')


class Subactivity(BaseModel):
    description: constr(max_length=100) = Field(..., title='Description')
    qualification_set: Optional[List[Qualification]] = None
    registries_subactivity_code: Optional[str] = Field(
        None, title='Registries subactivity code'
    )


class SurveyPage(Enum):
    w = 'w'
    r = 'r'
    s = 's'
    a = 'a'


class Survey(BaseModel):
    survey_guid: Optional[UUID] = Field(None, title='Survey guid')
    survey_introduction_text: Optional[constr(max_length=250)] = Field(
        None, title='Introduction Text'
    )
    survey_link: Optional[constr(max_length=100)] = Field(None, title='Link')
    survey_page: Optional[SurveyPage] = Field(None, title='Page')


class WaterUse(BaseModel):
    code: constr(max_length=2) = Field(..., title='Code')
    description: constr(max_length=100) = Field(..., title='Description')


class AlternativeSpecsSubmitted(Enum):
    boolean_False = False
    boolean_True = True


class HydroFracturingPerformed(Enum):
    boolean_False = False
    boolean_True = True


class WellDisinfected(Enum):
    boolean_False = False
    boolean_True = True


class WellOrientation(Enum):
    boolean_True = True
    boolean_False = False


class WellDetail(BaseModel):
    alteration_end_date: Optional[date] = Field(None, title='Alteration Date')
    alternative_specs_submitted: Optional[AlternativeSpecsSubmitted] = Field(
        None, title='Alternative specs submitted (if required)'
    )
    analytic_solution_type: Optional[Decimal] = Field(
        None, title='Analytic Solution Type'
    )
    aquifer: Optional[int] = Field(None, title='Aquifer ID Number')
    aquifer_vulnerability_index: Optional[Decimal] = Field(None, title='AVI')
    artesian_flow: Optional[Decimal] = Field(None, title='Artesian Flow')
    artesian_pressure: Optional[Decimal] = Field(None, title='Artesian Pressure')
    backfill_depth: Optional[Decimal] = Field(None, title='Backfill Depth')
    backfill_material: Optional[constr(max_length=100)] = Field(
        None, title='Backfill Material'
    )
    backfill_type: Optional[constr(max_length=250)] = Field(
        None, title='Backfill Material Above Surface Seal'
    )
    bcgs_id: Optional[int] = Field(None, title='BCGS Mapsheet Number')
    bedrock_depth: Optional[Decimal] = Field(None, title='Depth to Bedrock')
    boundary_effect: Optional[Decimal] = Field(None, title='Boundary Effect')
    casing_set: List[Casing]
    city: Optional[constr(max_length=50)] = Field(None, title='Town/City')
    comments: Optional[constr(max_length=3000)] = Field(None, title='Comments')
    company_of_person_responsible: OrganizationNameList
    construction_end_date: Optional[date] = Field(None, title='Construction Date')
    construction_start_date: Optional[date] = Field(
        None, title='Construction Start Date'
    )
    coordinate_acquisition_code: Optional[str] = Field(
        None, title='Location Accuracy Code'
    )
    decommission_description_set: List[DecommissionDescription]
    decommission_details: Optional[constr(max_length=250)] = Field(
        None, title='Decommission Details'
    )
    decommission_end_date: Optional[date] = Field(None, title='Decommission Date')
    decommission_method: Optional[str] = Field(None, title='Method of Decommission')
    decommission_reason: Optional[constr(max_length=250)] = Field(
        None, title='Reason for Decommission'
    )
    decommission_start_date: Optional[date] = Field(
        None, title='Decommission Start Date'
    )
    development_hours: Optional[Decimal] = Field(
        None, title='Development Total Duration'
    )
    development_method: Optional[str] = Field(None, title='Developed By')
    development_notes: Optional[constr(max_length=255)] = Field(
        None, title='Development Notes'
    )
    diameter: Optional[constr(max_length=9)] = Field(None, title='Diameter')
    drawdown: Optional[Decimal] = Field(None, title='Drawdown')
    drilling_company: Optional[UUID] = Field(None, title='Drilling Company')
    drilling_method: Optional[str] = Field(None, title='Drilling Method')
    ems: Optional[constr(max_length=10)] = Field(
        None, title='Environmental Monitoring System (EMS) ID'
    )
    filter_pack_from: Optional[Decimal] = Field(None, title='Filter Pack From')
    filter_pack_material: Optional[str] = Field(None, title='Filter Pack Material')
    filter_pack_material_size: Optional[str] = Field(
        None, title='Filter Pack Material Size'
    )
    filter_pack_thickness: Optional[Decimal] = Field(
        None, title='Filter Pack Thickness'
    )
    filter_pack_to: Optional[Decimal] = Field(None, title='Filter Pack To')
    final_casing_stick_up: Optional[Decimal] = Field(
        None, title='Final Casing Stick Up'
    )
    finished_well_depth: Optional[Decimal] = Field(None, title='Finished Well Depth')
    ground_elevation: Optional[Decimal] = Field(None, title='Ground Elevation')
    ground_elevation_method: Optional[str] = Field(
        None, title='Elevation Determined By'
    )
    hydraulic_conductivity: Optional[constr(max_length=100)] = Field(
        None, title='Hydraulic Conductivity'
    )
    hydro_fracturing_performed: Optional[HydroFracturingPerformed] = Field(
        None, title='Hydro-fracturing Performed?'
    )
    hydro_fracturing_yield_increase: Optional[Decimal] = Field(
        None, title='Well Yield Increase Due to Hydro-fracturing'
    )
    id_plate_attached_by: Optional[constr(max_length=100)] = Field(
        None, title='Well identification plate attached by'
    )
    identification_plate_number: Optional[conint(ge=0, le=2147483647)] = Field(
        None, title='Well Identification Plate Number'
    )
    intended_water_use: Optional[str] = Field(None, title='Intended Water Use')
    land_district: Optional[str] = Field(None, title='Land District')
    latitude: Optional[Decimal] = Field(None, title='Latitude')
    legal_block: Optional[constr(max_length=10)] = Field(None, title='Block')
    legal_district_lot: Optional[constr(max_length=20)] = Field(
        None, title='District Lot'
    )
    legal_lot: Optional[constr(max_length=10)] = Field(None, title='Lot')
    legal_pid: Optional[conint(ge=0, le=2147483647)] = Field(
        None, title='Property Identification Description (PID)'
    )
    legal_plan: Optional[constr(max_length=20)] = Field(None, title='Plan')
    legal_range: Optional[constr(max_length=10)] = Field(None, title='Range')
    legal_section: Optional[constr(max_length=10)] = Field(None, title='Section')
    legal_township: Optional[constr(max_length=20)] = Field(None, title='Township')
    licenced_status: Optional[str] = Field(None, title='Licenced Status')
    liner_diameter: Optional[Decimal] = Field(None, title='Liner Diameter')
    liner_from: Optional[Decimal] = Field(None, title='Liner From')
    liner_material: Optional[str] = Field(None, title='Liner Material')
    liner_thickness: Optional[Decimal] = Field(None, title='Liner Thickness')
    liner_to: Optional[Decimal] = Field(None, title='Liner To')
    linerperforation_set: List[LinerPerforation]
    lithologydescription_set: List[LithologyDescription]
    longitude: Optional[Decimal] = Field(None, title='Longitude')
    observation_well_number: Optional[constr(max_length=30)] = Field(
        None, title='Observation Well Number'
    )
    observation_well_status: Optional[str] = Field(
        None, title='Observation Well Status'
    )
    other_drilling_method: Optional[constr(max_length=50)] = Field(
        None, title='Specify Other Drilling Method'
    )
    other_screen_bottom: Optional[constr(max_length=50)] = Field(
        None, title='Specify Other Screen Bottom'
    )
    other_screen_material: Optional[constr(max_length=50)] = Field(
        None, title='Specify Other Screen Material'
    )
    owner_full_name: constr(max_length=200) = Field(..., title='Owner Name')
    person_responsible: PersonBasic
    recommended_pump_depth: Optional[Decimal] = Field(
        None, title='Recommended pump depth'
    )
    recommended_pump_rate: Optional[Decimal] = Field(
        None, title='Recommended pump rate'
    )
    screen_bottom: Optional[str] = Field(None, title='Bottom')
    screen_information: Optional[constr(max_length=300)] = Field(
        None, title='Screen Information'
    )
    screen_intake_method: Optional[str] = Field(None, title='Intake Method')
    screen_material: Optional[str] = Field(None, title='Material')
    screen_opening: Optional[str] = Field(None, title='Opening')
    screen_set: List[Screen]
    screen_type: Optional[str] = Field(None, title='Type')
    sealant_material: Optional[constr(max_length=100)] = Field(
        None, title='Sealant Material'
    )
    specific_storage: Optional[constr(max_length=100)] = Field(
        None, title='Specific Storage'
    )
    specific_yield: Optional[Decimal] = Field(None, title='Specific Yield')
    static_level_before_test: Optional[Decimal] = Field(None, title='SWL Before Test')
    static_water_level: Optional[Decimal] = Field(
        None, title='Static Water Level (BTOC)'
    )
    storativity: Optional[Decimal] = Field(None, title='Storativity')
    street_address: Optional[constr(max_length=100)] = Field(
        None, title='Street Address'
    )
    surface_seal_depth: Optional[Decimal] = Field(None, title='Surface Seal Depth')
    surface_seal_length: Optional[Decimal] = Field(None, title='Surface Seal Length')
    surface_seal_material: Optional[str] = Field(None, title='Surface Seal Material')
    surface_seal_method: Optional[str] = Field(
        None, title='Surface Seal Installation Method'
    )
    surface_seal_thickness: Optional[Decimal] = Field(
        None, title='Surface Seal Thickness'
    )
    testing_duration: Optional[conint(ge=0, le=2147483647)] = Field(
        None, title='Testing duration'
    )
    testing_method: Optional[constr(max_length=100)] = Field(
        None, title='Testing Method'
    )
    total_depth_drilled: Optional[Decimal] = Field(None, title='Total Depth Drilled')
    transmissivity: Optional[Decimal] = Field(None, title='Transmissivity')
    utm_easting: Optional[conint(ge=-2147483648, le=2147483647)] = Field(
        None, title='UTM Easting'
    )
    utm_northing: Optional[conint(ge=-2147483648, le=2147483647)] = Field(
        None, title='UTM Northing'
    )
    utm_zone_code: Optional[constr(max_length=10)] = Field(None, title='Zone')
    water_quality_characteristics: Optional[List[str]] = None
    water_quality_colour: Optional[constr(max_length=60)] = Field(
        None, title='Water Quality Colour'
    )
    water_quality_odour: Optional[constr(max_length=60)] = Field(
        None, title='Water Quality Odour'
    )
    water_supply_system_name: Optional[constr(max_length=80)] = Field(
        None, title='Water Supply System Name'
    )
    water_supply_system_well_name: Optional[constr(max_length=80)] = Field(
        None, title='Water Supply System Well Name'
    )
    well: int = Field(..., title='Well')
    well_cap_type: Optional[constr(max_length=40)] = Field(None, title='Well Cap')
    well_class: Optional[str] = Field(None, title='Well Class')
    well_disinfected: Optional[WellDisinfected] = Field(None, title='Well Disinfected')
    well_guid: Optional[UUID] = Field(None, title='Well guid')
    well_identification_plate_attached: Optional[constr(max_length=500)] = Field(
        None, title='Well Identification Plate Is Attached'
    )
    well_location_description: Optional[constr(max_length=500)] = Field(
        None, title='Description of Well Location'
    )
    well_orientation: Optional[WellOrientation] = Field(
        None, title='Orientation of Well'
    )
    well_status: Optional[str] = Field(None, title='Well Status')
    well_subclass: Optional[UUID] = Field(None, title='Well Subclass')
    well_tag_number: Optional[int] = Field(None, title='Well Tag Number')
    well_yield: Optional[Decimal] = Field(None, title='Estimated Well Yield')
    well_yield_unit: Optional[str] = Field(None, title='Well yield unit')
    yield_estimation_duration: Optional[Decimal] = Field(
        None, title='Estimation Duration'
    )
    yield_estimation_method: Optional[str] = Field(None, title='Estimation Method')
    yield_estimation_rate: Optional[Decimal] = Field(None, title='Estimation Rate')


class WellList(BaseModel):
    alteration_end_date: Optional[date] = Field(None, title='Alteration Date')
    alternative_specs_submitted: Optional[AlternativeSpecsSubmitted] = Field(
        None, title='Alternative specs submitted (if required)'
    )
    analytic_solution_type: Optional[Decimal] = Field(
        None, title='Analytic Solution Type'
    )
    aquifer: Optional[int] = Field(None, title='Aquifer ID Number')
    aquifer_vulnerability_index: Optional[Decimal] = Field(None, title='AVI')
    artesian_flow: Optional[Decimal] = Field(None, title='Artesian Flow')
    artesian_pressure: Optional[Decimal] = Field(None, title='Artesian Pressure')
    backfill_depth: Optional[Decimal] = Field(None, title='Backfill Depth')
    backfill_material: Optional[constr(max_length=100)] = Field(
        None, title='Backfill Material'
    )
    backfill_type: Optional[constr(max_length=250)] = Field(
        None, title='Backfill Material Above Surface Seal'
    )
    bcgs_id: Optional[int] = Field(None, title='BCGS Mapsheet Number')
    bedrock_depth: Optional[Decimal] = Field(None, title='Depth to Bedrock')
    boundary_effect: Optional[Decimal] = Field(None, title='Boundary Effect')
    city: Optional[constr(max_length=50)] = Field(None, title='Town/City')
    comments: Optional[constr(max_length=3000)] = Field(None, title='Comments')
    construction_end_date: Optional[date] = Field(None, title='Construction Date')
    construction_start_date: Optional[date] = Field(
        None, title='Construction Start Date'
    )
    coordinate_acquisition_code: Optional[str] = Field(
        None, title='Location Accuracy Code'
    )
    decommission_details: Optional[constr(max_length=250)] = Field(
        None, title='Decommission Details'
    )
    decommission_end_date: Optional[date] = Field(None, title='Decommission Date')
    decommission_method: Optional[str] = Field(None, title='Method of Decommission')
    decommission_reason: Optional[constr(max_length=250)] = Field(
        None, title='Reason for Decommission'
    )
    decommission_start_date: Optional[date] = Field(
        None, title='Decommission Start Date'
    )
    development_hours: Optional[Decimal] = Field(
        None, title='Development Total Duration'
    )
    development_method: Optional[str] = Field(None, title='Developed By')
    development_notes: Optional[constr(max_length=255)] = Field(
        None, title='Development Notes'
    )
    diameter: Optional[constr(max_length=9)] = Field(None, title='Diameter')
    drawdown: Optional[Decimal] = Field(None, title='Drawdown')
    drilling_company: Optional[UUID] = Field(None, title='Drilling Company')
    drilling_method: Optional[str] = Field(None, title='Drilling Method')
    ems: Optional[constr(max_length=10)] = Field(
        None, title='Environmental Monitoring System (EMS) ID'
    )
    filter_pack_from: Optional[Decimal] = Field(None, title='Filter Pack From')
    filter_pack_material: Optional[str] = Field(None, title='Filter Pack Material')
    filter_pack_material_size: Optional[str] = Field(
        None, title='Filter Pack Material Size'
    )
    filter_pack_thickness: Optional[Decimal] = Field(
        None, title='Filter Pack Thickness'
    )
    filter_pack_to: Optional[Decimal] = Field(None, title='Filter Pack To')
    final_casing_stick_up: Optional[Decimal] = Field(
        None, title='Final Casing Stick Up'
    )
    finished_well_depth: Optional[Decimal] = Field(None, title='Finished Well Depth')
    ground_elevation: Optional[Decimal] = Field(None, title='Ground Elevation')
    ground_elevation_method: Optional[str] = Field(
        None, title='Elevation Determined By'
    )
    hydraulic_conductivity: Optional[constr(max_length=100)] = Field(
        None, title='Hydraulic Conductivity'
    )
    hydro_fracturing_performed: Optional[HydroFracturingPerformed] = Field(
        None, title='Hydro-fracturing Performed?'
    )
    hydro_fracturing_yield_increase: Optional[Decimal] = Field(
        None, title='Well Yield Increase Due to Hydro-fracturing'
    )
    id_plate_attached_by: Optional[constr(max_length=100)] = Field(
        None, title='Well identification plate attached by'
    )
    identification_plate_number: Optional[conint(ge=0, le=2147483647)] = Field(
        None, title='Well Identification Plate Number'
    )
    intended_water_use: Optional[str] = Field(None, title='Intended Water Use')
    land_district: Optional[str] = Field(None, title='Land District')
    latitude: Optional[Decimal] = Field(None, title='Latitude')
    legal_block: Optional[constr(max_length=10)] = Field(None, title='Block')
    legal_district_lot: Optional[constr(max_length=20)] = Field(
        None, title='District Lot'
    )
    legal_lot: Optional[constr(max_length=10)] = Field(None, title='Lot')
    legal_pid: Optional[conint(ge=0, le=2147483647)] = Field(
        None, title='Property Identification Description (PID)'
    )
    legal_plan: Optional[constr(max_length=20)] = Field(None, title='Plan')
    legal_range: Optional[constr(max_length=10)] = Field(None, title='Range')
    legal_section: Optional[constr(max_length=10)] = Field(None, title='Section')
    legal_township: Optional[constr(max_length=20)] = Field(None, title='Township')
    licenced_status: Optional[str] = Field(None, title='Licenced Status')
    liner_diameter: Optional[Decimal] = Field(None, title='Liner Diameter')
    liner_from: Optional[Decimal] = Field(None, title='Liner From')
    liner_material: Optional[str] = Field(None, title='Liner Material')
    liner_thickness: Optional[Decimal] = Field(None, title='Liner Thickness')
    liner_to: Optional[Decimal] = Field(None, title='Liner To')
    longitude: Optional[Decimal] = Field(None, title='Longitude')
    observation_well_number: Optional[constr(max_length=30)] = Field(
        None, title='Observation Well Number'
    )
    observation_well_status: Optional[str] = Field(
        None, title='Observation Well Status'
    )
    other_drilling_method: Optional[constr(max_length=50)] = Field(
        None, title='Specify Other Drilling Method'
    )
    other_screen_bottom: Optional[constr(max_length=50)] = Field(
        None, title='Specify Other Screen Bottom'
    )
    other_screen_material: Optional[constr(max_length=50)] = Field(
        None, title='Specify Other Screen Material'
    )
    owner_full_name: constr(max_length=200) = Field(..., title='Owner Name')
    recommended_pump_depth: Optional[Decimal] = Field(
        None, title='Recommended pump depth'
    )
    recommended_pump_rate: Optional[Decimal] = Field(
        None, title='Recommended pump rate'
    )
    screen_bottom: Optional[str] = Field(None, title='Bottom')
    screen_information: Optional[constr(max_length=300)] = Field(
        None, title='Screen Information'
    )
    screen_intake_method: Optional[str] = Field(None, title='Intake Method')
    screen_material: Optional[str] = Field(None, title='Material')
    screen_opening: Optional[str] = Field(None, title='Opening')
    screen_type: Optional[str] = Field(None, title='Type')
    sealant_material: Optional[constr(max_length=100)] = Field(
        None, title='Sealant Material'
    )
    specific_storage: Optional[constr(max_length=100)] = Field(
        None, title='Specific Storage'
    )
    specific_yield: Optional[Decimal] = Field(None, title='Specific Yield')
    static_level_before_test: Optional[Decimal] = Field(None, title='SWL Before Test')
    static_water_level: Optional[Decimal] = Field(
        None, title='Static Water Level (BTOC)'
    )
    storativity: Optional[Decimal] = Field(None, title='Storativity')
    street_address: Optional[constr(max_length=100)] = Field(
        None, title='Street Address'
    )
    surface_seal_depth: Optional[Decimal] = Field(None, title='Surface Seal Depth')
    surface_seal_length: Optional[Decimal] = Field(None, title='Surface Seal Length')
    surface_seal_material: Optional[str] = Field(None, title='Surface Seal Material')
    surface_seal_method: Optional[str] = Field(
        None, title='Surface Seal Installation Method'
    )
    surface_seal_thickness: Optional[Decimal] = Field(
        None, title='Surface Seal Thickness'
    )
    testing_duration: Optional[conint(ge=0, le=2147483647)] = Field(
        None, title='Testing duration'
    )
    testing_method: Optional[constr(max_length=100)] = Field(
        None, title='Testing Method'
    )
    total_depth_drilled: Optional[Decimal] = Field(None, title='Total Depth Drilled')
    transmissivity: Optional[Decimal] = Field(None, title='Transmissivity')
    utm_easting: Optional[conint(ge=-2147483648, le=2147483647)] = Field(
        None, title='UTM Easting'
    )
    utm_northing: Optional[conint(ge=-2147483648, le=2147483647)] = Field(
        None, title='UTM Northing'
    )
    utm_zone_code: Optional[constr(max_length=10)] = Field(None, title='Zone')
    water_quality_characteristics: Optional[List[str]] = None
    water_quality_colour: Optional[constr(max_length=60)] = Field(
        None, title='Water Quality Colour'
    )
    water_quality_odour: Optional[constr(max_length=60)] = Field(
        None, title='Water Quality Odour'
    )
    water_supply_system_name: Optional[constr(max_length=80)] = Field(
        None, title='Water Supply System Name'
    )
    water_supply_system_well_name: Optional[constr(max_length=80)] = Field(
        None, title='Water Supply System Well Name'
    )
    well_cap_type: Optional[constr(max_length=40)] = Field(None, title='Well Cap')
    well_class: Optional[str] = Field(None, title='Well Class')
    well_disinfected: Optional[WellDisinfected] = Field(None, title='Well Disinfected')
    well_guid: Optional[UUID] = Field(None, title='Well guid')
    well_identification_plate_attached: Optional[constr(max_length=500)] = Field(
        None, title='Well Identification Plate Is Attached'
    )
    well_location_description: Optional[constr(max_length=500)] = Field(
        None, title='Description of Well Location'
    )
    well_orientation: Optional[WellOrientation] = Field(
        None, title='Orientation of Well'
    )
    well_status: Optional[str] = Field(None, title='Well Status')
    well_subclass: Optional[UUID] = Field(None, title='Well Subclass')
    well_tag_number: Optional[int] = Field(None, title='Well Tag Number')
    well_yield: Optional[Decimal] = Field(None, title='Estimated Well Yield')
    well_yield_unit: Optional[str] = Field(None, title='Well yield unit')
    yield_estimation_duration: Optional[Decimal] = Field(
        None, title='Estimation Duration'
    )
    yield_estimation_method: Optional[str] = Field(None, title='Estimation Method')
    yield_estimation_rate: Optional[Decimal] = Field(None, title='Estimation Rate')


class WellTagSearch(BaseModel):
    owner_full_name: constr(max_length=200) = Field(..., title='Owner Name')
    well_tag_number: Optional[int] = Field(None, title='Well Tag Number')


class AquiferCodesDemandGetResponse(BaseModel):
    count: int
    next: Optional[AnyUrl] = None
    previous: Optional[AnyUrl] = None
    results: List[AquiferDemand]


class AquiferCodesMaterialsGetResponse(BaseModel):
    count: int
    next: Optional[AnyUrl] = None
    previous: Optional[AnyUrl] = None
    results: List[AquiferMaterial]


class AquiferCodesProductivityGetResponse(BaseModel):
    count: int
    next: Optional[AnyUrl] = None
    previous: Optional[AnyUrl] = None
    results: List[AquiferProductivity]


class AquiferCodesQualityConcernsGetResponse(BaseModel):
    count: int
    next: Optional[AnyUrl] = None
    previous: Optional[AnyUrl] = None
    results: List[QualityConcern]


class AquiferCodesSubtypesGetResponse(BaseModel):
    count: int
    next: Optional[AnyUrl] = None
    previous: Optional[AnyUrl] = None
    results: List[AquiferSubtype]


class AquiferCodesVulnerabilityGetResponse(BaseModel):
    count: int
    next: Optional[AnyUrl] = None
    previous: Optional[AnyUrl] = None
    results: List[AquiferVulnerability]


class AquiferCodesWaterUseGetResponse(BaseModel):
    count: int
    next: Optional[AnyUrl] = None
    previous: Optional[AnyUrl] = None
    results: List[WaterUse]


class AquifersGetResponse(BaseModel):
    count: int
    next: Optional[AnyUrl] = None
    previous: Optional[AnyUrl] = None
    results: List[Aquifer]


class AquifersNamesGetResponse(RootModel[List[AquiferSerializerBasic]]):
    root: List[AquiferSerializerBasic]


class PrivateItem(BaseModel):
    name: Optional[str] = None
    url: Optional[str] = None


class PublicItem(BaseModel):
    name: Optional[str] = None
    url: Optional[str] = None


class AquifersAquiferIdFilesGetResponse(BaseModel):
    private: Optional[List[PrivateItem]] = None
    public: Optional[List[PublicItem]] = None


class DrillersPersonGuidFilesGetResponse(BaseModel):
    private: Optional[List[PrivateItem]] = None
    public: Optional[List[PublicItem]] = None


class SurveysGetResponse(RootModel[List[Survey]]):
    root: List[Survey]


class WellsGetResponse(BaseModel):
    count: int
    next: Optional[AnyUrl] = None
    previous: Optional[AnyUrl] = None
    results: List[WellList]


class WellsTagsGetResponse(RootModel[List[WellTagSearch]]):
    root: List[WellTagSearch]


class WellsTagFilesGetResponse(BaseModel):
    private: Optional[List[PrivateItem]] = None
    public: Optional[List[PublicItem]] = None


class ApplicationList(BaseModel):
    cert_authority: Optional[str] = Field(None, title='Cert authority')
    certificate: Optional[str] = Field(None, title='Certificate')
    current_status: Optional[ApplicationStatusCode] = None
    display_status: Optional[str] = Field(None, title='Display status')
    qualifications: Optional[List[Qualification]] = None
    removal_date: Optional[date] = Field(None, title='Removal date')
    subactivity: Subactivity


class CityList(BaseModel):
    organization: Organization


class PersonName(BaseModel):
    name: Optional[str] = Field(None, title='Name')
    person_guid: Optional[UUID] = Field(None, title='Person UUID')
    registrations: Optional[List[RegistrationsNumber]] = None


class RegistrationsList(BaseModel):
    activity: Optional[str] = Field(None, title='Activity')
    activity_description: Optional[str] = Field(None, title='Activity description')
    applications: Optional[List[ApplicationList]] = None
    organization: OrganizationList
    registration_no: Optional[constr(max_length=15)] = Field(
        None, title='Registration no'
    )


class CitiesDrillersGetResponse(RootModel[List[CityList]]):
    root: List[CityList]


class CitiesInstallersGetResponse(RootModel[List[CityList]]):
    root: List[CityList]


class DrillersNamesGetResponse(RootModel[List[PersonName]]):
    root: List[PersonName]


class PersonList(BaseModel):
    contact_cell: Optional[constr(max_length=15)] = Field(
        None, title='Contact cell number'
    )
    contact_email: Optional[EmailStr] = Field(None, title='Email address')
    contact_tel: Optional[constr(max_length=15)] = Field(
        None, title='Contact telephone number'
    )
    first_name: constr(max_length=100) = Field(..., title='First name')
    person_guid: Optional[UUID] = Field(None, title='Person UUID')
    registrations: Optional[List[RegistrationsList]] = None
    surname: constr(max_length=100) = Field(..., title='Surname')


class DrillersGetResponse(RootModel[List[PersonList]]):
    root: List[PersonList]
